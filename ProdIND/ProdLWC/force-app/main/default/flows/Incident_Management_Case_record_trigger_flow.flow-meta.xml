<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <constants>
        <name>AssignedtoL1</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Assigned to L1</stringValue>
        </value>
    </constants>
    <constants>
        <name>AssignedtoL2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Assigned to L2</stringValue>
        </value>
    </constants>
    <constants>
        <name>Entitlementdefault</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Entitlement default</stringValue>
        </value>
    </constants>
    <constants>
        <name>InProgressL2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>In Progress - L2</stringValue>
        </value>
    </constants>
    <constants>
        <name>L1QueueName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>L1_Support</stringValue>
        </value>
    </constants>
    <constants>
        <name>L2QueueName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>L2_Support</stringValue>
        </value>
    </constants>
    <constants>
        <name>RecordtypeName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Incident</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Case_Priority_Changed</name>
        <label>Case Priority Changed</label>
        <locationX>1678</locationX>
        <locationY>1559</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_isChanged_Priority</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Priority</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Loan_application_0</targetReference>
            </connector>
            <label>Check isChanged Priority</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_Owner_Changed</name>
        <label>Check Case Owner Changed</label>
        <locationX>1678</locationX>
        <locationY>1103</locationY>
        <defaultConnector>
            <targetReference>Case_Priority_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Owner_Changed_from_L1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>L1QueueName</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_L1_Queue_ID_1</targetReference>
            </connector>
            <label>Case Owner Changed from L1</label>
        </rules>
        <rules>
            <name>Case_Owner_changed_from_L2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>L2QueueName</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_L2_Queue_ID_0_0</targetReference>
            </connector>
            <label>Case Owner changed from L2</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Last_L1_User</name>
        <label>Check Last L1 User</label>
        <locationX>1810</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Last_L1_User_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Last_L1_User__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Get_L1_Queue_ID_0</targetReference>
            </connector>
            <label>Last L1 User null</label>
        </rules>
        <rules>
            <name>Last_L1_User_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Last_L1_User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_L1_User_to_case</targetReference>
            </connector>
            <label>Last L1 User not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Last_L2_User</name>
        <label>Check Last L2 User</label>
        <locationX>1106</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Last_L2_User_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Last_L2_User__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Get_L2_Queue_ID</targetReference>
            </connector>
            <label>Last L2 User null</label>
        </rules>
        <rules>
            <name>Last_L2_User_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Last_L2_User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_owner_to_user</targetReference>
            </connector>
            <label>Last L2 User not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Loan_application_is_selected</name>
        <label>Check Loan application is selected</label>
        <locationX>380</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Get_Entitlement_Records_0_0_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Loan_application_is_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Loan_Application__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Get_Loan_application_0_0</targetReference>
            </connector>
            <label>Loan application is not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Loan_application_is_selected_0</name>
        <label>Check Loan application is selected</label>
        <locationX>1447</locationX>
        <locationY>1799</locationY>
        <defaultConnector>
            <targetReference>Get_Entitlement_Records_0_0_0_0_0_0_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Loan_application_is_not_null_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Loan_Application__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_product_type_0</targetReference>
            </connector>
            <label>Loan application is not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_product_type</name>
        <label>Check product type</label>
        <locationX>182</locationX>
        <locationY>671</locationY>
        <defaultConnector>
            <targetReference>Get_Entitlement_Records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>check_product_type_blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>producttype</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Entitlement_Records_0_0</targetReference>
            </connector>
            <label>check product type blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_product_type_0</name>
        <label>Check product type</label>
        <locationX>1249</locationX>
        <locationY>1919</locationY>
        <defaultConnector>
            <targetReference>Get_Entitlement_Records_0_0_0_0_0_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>check_product_type_blank_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>producttype</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Entitlement_Records_0_0_0_0_0</targetReference>
            </connector>
            <label>check product type blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Status_Changed</name>
        <label>Check Status Changed</label>
        <locationX>1678</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Changed_Status_from_L1_to_L2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Assigned to L2</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Last_L2_User</targetReference>
            </connector>
            <label>Changed Status from L1 to L2</label>
        </rules>
        <rules>
            <name>Changed_Status_from_L2_to_L1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Assigned to L1</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Last_L1_User</targetReference>
            </connector>
            <label>Changed Status from L2 to L1</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Trigger_Event</name>
        <label>Check Trigger Event</label>
        <locationX>1403</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Insert_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsInsert</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>RecordtypeName</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Loan_application_is_selected</targetReference>
            </connector>
            <label>Insert Event</label>
        </rules>
        <rules>
            <name>Update_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsInsert</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>RecordtypeName</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Status_Changed</targetReference>
            </connector>
            <label>Update Event</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>GetLOB</name>
        <dataType>String</dataType>
        <expression>IF({!producttype}=&quot;Two Wheeler&quot;,&quot;TW&quot;,IF({!producttype}=&quot;Passenger Vehicles&quot;,&quot;PV&quot;,&quot;TW&quot;))</expression>
    </formulas>
    <formulas>
        <name>IsInsert</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Incident Management Case record trigger flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Incident Management Case record trigger flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Entitlement_Records</name>
        <label>Get Entitlement Records</label>
        <locationX>314</locationX>
        <locationY>791</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_L1_Queue_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetLOB</elementReference>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Entitlement_Records_0_0</name>
        <label>Get Entitlement Records</label>
        <locationX>50</locationX>
        <locationY>791</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_L1_Queue_ID_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Entitlementdefault</elementReference>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Entitlement_Records_0_0_0</name>
        <label>Get Entitlement Records</label>
        <locationX>578</locationX>
        <locationY>551</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_L1_Queue_ID_0_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Entitlementdefault</elementReference>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Entitlement_Records_0_0_0_0_0</name>
        <label>Get Entitlement Records</label>
        <locationX>1117</locationX>
        <locationY>2039</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update_0_0_0_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Entitlement default</stringValue>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Entitlement_Records_0_0_0_0_0_0</name>
        <label>Get Entitlement Records</label>
        <locationX>1381</locationX>
        <locationY>2039</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update_0_0_0_0_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetLOB</elementReference>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Entitlement_Records_0_0_0_0_0_0_0</name>
        <label>Get Entitlement Records</label>
        <locationX>1645</locationX>
        <locationY>1919</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update_0_0_0_0_0_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Entitlement default</stringValue>
            </value>
        </filters>
        <filters>
            <field>Priority__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Priority</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Entitlement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_L1_Queue_ID</name>
        <label>Get L1 Queue ID</label>
        <locationX>314</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L1QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>L1QueueID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L1_Queue_ID_0</name>
        <label>Get L1 Queue ID</label>
        <locationX>1546</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Update_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L1QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>QueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L1_Queue_ID_0_0</name>
        <label>Get L1 Queue ID</label>
        <locationX>50</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L1QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>L1QueueID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L1_Queue_ID_0_0_0</name>
        <label>Get L1 Queue ID</label>
        <locationX>578</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Status_Update_0_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L1QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>L1QueueID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L1_Queue_ID_1</name>
        <label>Get L1 Queue ID</label>
        <locationX>1414</locationX>
        <locationY>1223</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Last_L1_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L2QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>QueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L2_Queue_ID</name>
        <label>Get L2 Queue ID</label>
        <locationX>842</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L2QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>QueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_L2_Queue_ID_0_0</name>
        <label>Get L2 Queue ID</label>
        <locationX>1678</locationX>
        <locationY>1223</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Last_L2_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>L2QueueName</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>QueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Loan_application_0</name>
        <label>Get Loan application</label>
        <locationX>1447</locationX>
        <locationY>1679</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Loan_application_is_selected_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Loan_Application__c</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputAssignments>
            <assignToReference>producttype</assignToReference>
            <field>Product_Type__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Loan_application_0_0</name>
        <label>Get Loan application</label>
        <locationX>182</locationX>
        <locationY>551</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_product_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Loan_Application__c</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputAssignments>
            <assignToReference>producttype</assignToReference>
            <field>Product_Type__c</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Status_Update</name>
        <label>Status Update</label>
        <locationX>314</locationX>
        <locationY>1031</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>L1QueueID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Assigned to L1</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Status_Update_0_0</name>
        <label>Status Update</label>
        <locationX>50</locationX>
        <locationY>1031</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records_0_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>L1QueueID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Assigned to L1</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Status_Update_0_0_0</name>
        <label>Status Update</label>
        <locationX>578</locationX>
        <locationY>791</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records_0_0_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>L1QueueID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Assigned to L1</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Status_Update_0_0_0_0_0</name>
        <label>Status Update</label>
        <locationX>1117</locationX>
        <locationY>2159</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records_0_0_0_0_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Status_Update_0_0_0_0_0_0</name>
        <label>Status Update</label>
        <locationX>1381</locationX>
        <locationY>2159</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records_0_0_0_0_0_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Status_Update_0_0_0_0_0_0_0</name>
        <label>Status Update</label>
        <locationX>1645</locationX>
        <locationY>2039</locationY>
        <inputAssignments>
            <field>EntitlementId</field>
            <value>
                <elementReference>Get_Entitlement_Records_0_0_0_0_0_0_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Owner_to_Queue</name>
        <label>Update Case Owner to Queue</label>
        <locationX>842</locationX>
        <locationY>791</locationY>
        <connector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_to_user</name>
        <label>Update Case owner to user</label>
        <locationX>1106</locationX>
        <locationY>671</locationY>
        <connector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Last_L2_User__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_L1_User_to_case</name>
        <label>Update L1 User to case</label>
        <locationX>1810</locationX>
        <locationY>671</locationY>
        <connector>
            <targetReference>Check_Case_Owner_Changed</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Last_L1_User__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Last_L1_User</name>
        <label>Update Last L1 User</label>
        <locationX>1414</locationX>
        <locationY>1343</locationY>
        <connector>
            <targetReference>Case_Priority_Changed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Last_L2_User__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_L1_User__c</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Last_L2_User</name>
        <label>Update Last L2 User</label>
        <locationX>1678</locationX>
        <locationY>1343</locationY>
        <connector>
            <targetReference>Case_Priority_Changed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Last_L1_User__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Flowbypassvalidationdatetime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_L2_User__c</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress - L2</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>1277</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Trigger_Event</targetReference>
        </connector>
        <filterFormula>AND({!$Record.RecordType.DeveloperName}==&apos;Incident&apos;)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>EntitlementID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>L1QueueID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>producttype</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>QueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
