@isTest
public with sharing class CaptureDedupeInformationTest {

    @isTest
    static void testCaptureDedupe5() {

        Profile p = [SELECT Id FROM Profile WHERE Name = 'IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
                Name = 'Test Opp',
                StageName = 'Prospecting',
                CloseDate = Date.today(),
                IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            

            String dedupeRes = '{"JData":""}';
            String dedupeResponseString = IntegrationUtilities.getPlainTextForLog(dedupeRes);
            CaptureDedupeInformation.DedupeData jsonParsed =(CaptureDedupeInformation.DedupeData) JSON.deserialize(dedupeResponseString,CaptureDedupeInformation.DedupeData.class);
            jsonParsed.LoanApplicationId = opp.Id;
            jsonParsed.ApplicantId = applicant.Id;
            jsonParsed.documentId = document.Id;

            String request = JSON.serialize(jsonParsed);
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(request,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request = new RestRequest();
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;
            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }

    }

    @isTest
    static void testCaptureDedupe4() {

        Profile p = [SELECT Id FROM Profile WHERE Name = 'IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
                Name = 'Test Opp',
                StageName = 'Prospecting',
                CloseDate = Date.today(),
                IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            

            String dedupeRes = '{"JData":""}';
            String dedupeResponseString = IntegrationUtilities.getPlainTextForLog(dedupeRes);
            CaptureDedupeInformation.DedupeData jsonParsed =(CaptureDedupeInformation.DedupeData) JSON.deserialize(dedupeResponseString,CaptureDedupeInformation.DedupeData.class);
            jsonParsed.LoanApplicationId = opp.Id;
            jsonParsed.ApplicantId = applicant.Id;
            jsonParsed.documentId = document.Id;

            String request = JSON.serialize(jsonParsed);
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(request,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request = new RestRequest();
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;
            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }

    }

    @isTest
    static void testCaptureDedupe3() {

        Profile p = [SELECT Id FROM Profile WHERE Name = 'IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
                Name = 'Test Opp',
                StageName = 'Prospecting',
                CloseDate = Date.today(),
                IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            

            String dedupeRes = '{"JData":"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"}';
            String dedupeResponseString = IntegrationUtilities.getPlainTextForLog(dedupeRes);
            CaptureDedupeInformation.DedupeData jsonParsed =(CaptureDedupeInformation.DedupeData) JSON.deserialize(dedupeResponseString,CaptureDedupeInformation.DedupeData.class);
            jsonParsed.LoanApplicationId = opp.Id;
            jsonParsed.ApplicantId = applicant.Id;
            jsonParsed.documentId = document.Id;
            String request = JSON.serialize(jsonParsed);
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(request,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request = new RestRequest();
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;
            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }

    }

    @isTest
    static void testCaptureDedupe2() {

        Profile p = [SELECT Id FROM Profile WHERE Name = 'IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
                Name = 'Test Opp',
                StageName = 'Prospecting',
                CloseDate = Date.today(),
                IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            

            String dedupeRes = '{"JData":"QBQ1MwGhn2QsTxdNRAbsi+k7GzN1yVJZcinqD/tFgJWMLZMNdjQYHtUKDima586sezFYuhND+wX+QIixRZJaH0iVCA+aJl6sdmWLrf+y0JviIRCUJkEoblB4tRz/r1CUdJ4K8IfaKkjJ9Xucaoo0OxQuCONurlva3ii6Wi4L5BjOG6RuGlho2qedZhXMu7rcpwB4nN4Uo7G3VgwevotcR6nt7Dg4sBW2CsR+xSmVcBzYDoPeInfI6iKdiAUdr2fTN9sFUPkc90dSnuVKzV7C0yLfN0Ov610m7fcySTxcFwwM2myLbW+zYp+li52gt0yTq1g/rZWA5yqFivPbIWH4S3DKX4Na0LQan88S9koSpbHQjLdOzya6DUVDagczXGhWV6Nn1BUdqJP71V8nTimp0ZXZp9XTwhHsKRUG1jZHcVn9AaJv+GCiXNTiyC+zL4KO6PmjFGC5VN/g2sYqQKhyCyDiN3qMFi3H0g3ITec74VhTaAfNHHj1nvm6vIcpzz8sfF6wUvDdUcUyfhdTiHWhqzgIfXkB7pQVf6TXpIxm+zmjg7WGXWTNYrCXOvnugmsFJ1UPuCU9xyPpHQx3+SS254JvJx2J4bRedR877jyTT2Mlo4hjtMGtKRxU1czUCbIY4Cxxi5PSd/0eltdNuZZJdz2MzPaRyVNoT9FDWBY6AC2ZQ4tC1fifTAf6vG392PKuubYqSqMYfAy2MCaNNoU2ipO14YrqWqG2muFqDZ0DWJHfl3JmigVBjOAhe0tCRB4jZztGKyN0SabLHyZbSne4W8/AUeH85VlDOGTdfHoLnoxNHS5mfLeRF5iWNJ4GaMpZVuHP62oRqBQzsts1wtm1JMYpHRxks2fcLVu8kytlN/KEYxS0mOH/xBwfw76DA23yfHa1hGhF8A/iuOMZgIxj/gqK3uAUy1o5Cl3hWTn9NlvtwMuEA9hXOFgcZkr/YQcLRTZTdqPwvPops1ofZRafGuGDFxy2vCUhWgONLawv3wmJBpV8GDcsZMhppJ6nM+rC6niovIbIAddAt4lk1DKHWfacVfDgBq9rUfrUSS4050X/VaBs3Rm1AeeY4lGUvgDtzpP82McxgJflK3t6l2XpFyFYwS0sNvkE5qddnlG6bTX8k1Ydhw8EYBDAQFvWg/fWs3AmeZxiBb/MymkNCBRxmAFmAEZNqUKgo50VrNvNwtbEM3fMDdvZ6Gp4NJ5WHitP2o3HS/42gHJsiFaI+ZLHjODKOrbkQzDcr4stRbUhDVFXKmxkX2hhFwtCVB54JjWhVuwLlJe6dsg0sKu1swJlvcsiezn9HKMEahgv3H2mZ/5307aZaG+L6Uw9BZ0HYqw2FogOrtZ6kw6kRdjvSyWYbEAoS0FqnEG7/9taRl+DNe607o94tYrYnH266kNQpUJx7xGJ6OSlDWLv7WI53/9geqFFI5WQ+cMfXq4egSHIdImrQF9SGyBnobChu6ig2/VOAGNP0yr5BIjHU2pCHKBUN0FH/qzvkhMy4s/66ymwD4oyvZXwq+HebgAYaxyKca3d9FIKhbBkTZylY40D31YyNFNgNzVRr4XWDHpuujUlWw8="}';
            String dedupeResponseString = IntegrationUtilities.getPlainTextForLog(dedupeRes);
            CaptureDedupeInformation.DedupeData jsonParsed =(CaptureDedupeInformation.DedupeData) JSON.deserialize(dedupeResponseString,CaptureDedupeInformation.DedupeData.class);
            jsonParsed.LoanApplicationId = opp.Id;
            jsonParsed.ApplicantId = applicant.Id;
            jsonParsed.documentId = document.Id;
            String request = JSON.serialize(jsonParsed);
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(request,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request = new RestRequest();
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;
            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }

    }

    @isTest
    static void testCaptureDedupe1() {

        Profile p = [SELECT Id FROM Profile WHERE Name = 'IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
                Name = 'Test Opp',
                StageName = 'Prospecting',
                CloseDate = Date.today(),
                IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            

            String dedupeRes = '{"JData":"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"}';
            String dedupeResponseString = IntegrationUtilities.getPlainTextForLog(dedupeRes);
            CaptureDedupeInformation.DedupeData jsonParsed =(CaptureDedupeInformation.DedupeData) JSON.deserialize(dedupeResponseString,CaptureDedupeInformation.DedupeData.class);
            jsonParsed.LoanApplicationId = opp.Id;
            jsonParsed.ApplicantId = applicant.Id;
            jsonParsed.documentId = document.Id;
            String request = JSON.serialize(jsonParsed);
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(request,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request = new RestRequest();
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;
            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }

    }
    
///////////////////////////////////
    @isTest
    static void testCaptureDedupe() {
        
        Profile p = [SELECT Id FROM Profile WHERE Name='IBL Business Executive'];
        User u = new User(Alias = 'standt2', email='standarduser2@testorg.com',
                          EmailEncodingKey='UTF-8', LastName='Testing', LanguageLocaleKey='en_US',
                          LocaleSidKey='en_US', ProfileId = p.Id,Maker_Id__c='12',IsActive = true,
                          timezonesidkey='america/los_angeles',username='test_userprod123Prod@indusbank.com',MobilePhone = '9089078967');
        insert u;
        System.runAs(u) {
            Opportunity opp = new Opportunity(
            Name = 'Test Opp',
            StageName = 'Prospecting',
            CloseDate = Date.today(),
            IO_Loan_Amount__c = '700000'
            );
            insert opp;
            Applicant__c applicant = new Applicant__c(
                Customer_Code__c = 'Test Code',
                Opportunity__c = opp.Id,
                Customer_First_Name__c = 'Test',
                Customer_Last_Name__c = 'Applicant'
            );
            insert applicant;

            Documents__c document = new Documents__c(
                Opportunity_Relation__c = opp.Id,
                Applicant__c = applicant.Id,
                Name = 'Test Document'
            );
            insert document;
            CaptureDedupeInformation.DedupeData request = new CaptureDedupeInformation.DedupeData();
            request.LoanApplicationId = opp.Id;
            request.ApplicantId = applicant.Id;
            
            system.debug('##    '+ request.DedupeResponse);
            request.CustomerCode = 'CU7872983';
            request.CIFId = '10758385';
            request.IsETB = true;
            request.cic_number = 'CU7872983';
            request.FirstName = 'Test';
            request.LastName = 'User';
            request.documentId = document.Id;

            String requestJSON = JSON.serialize(request);
            RestContext.request = new RestRequest();
            String encryptedResponse = IntegrationUtilities.getEncryptedRequest(requestJSON,System.Label.privateKey,System.Label.ivkey); 
            String jdataRequest = '"JData":';
            RestContext.request.requestBody = Blob.valueOf('{'+jdataRequest + '"'+encryptedResponse+'"'+'}');
            RestResponse res = new RestResponse();
            RestContext.response= res;

            // Call the method
            Test.startTest();
            CaptureDedupeInformation.captureDedupeResponse();
            Test.stopTest();
        }
        




    }
}